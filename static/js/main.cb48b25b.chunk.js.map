{"version":3,"sources":["components/ItemRow/ItemRow.jsx","components/Items/Items.jsx","App.js","reportWebVitals.js","index.js"],"names":["ItemRow","props","scope","id","name","Items","state","items","calorieCount","caloreCount","newItem","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","length","itemsArray","push","className","this","map","item","key","onSubmit","htmlFor","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAYeA,EAVC,SAACC,GAEf,OACE,+BACE,oBAAIC,MAAM,MAAV,SAAiBD,EAAME,KACvB,6BAAKF,EAAMG,WC0FFC,E,4MA7FbC,MAAQ,CACNC,MAAO,CACL,CACEJ,GAAI,EACJC,KAAM,cACNI,aAAc,GAEhB,CACEL,GAAI,EACJC,KAAM,WACNK,YAAa,KAEf,CACEN,GAAI,EACJC,KAAM,qBACNI,aAAc,KAGlBE,QAAS,I,EAGXC,kBAAoB,SAACC,GAAO,IAAD,EACDA,EAAEC,OAAlBT,EADiB,EACjBA,KAAMU,EADW,EACXA,MAEd,EAAKC,SAAL,eACGX,EAAOU,K,EAIZE,aAAe,SAACJ,GACdA,EAAEK,iBAEF,IAAMP,EAAU,CACdP,GAAI,EAAKG,MAAMC,MAAMW,OAAS,EAC9Bd,KAAM,EAAKE,MAAMI,SAGbS,EAAU,YAAO,EAAKb,MAAMC,OAClCY,EAAWC,KAAKV,GAEhB,EAAKK,SAAS,CACZR,MAAOY,EACPT,QAAS,M,4CAIb,WACE,OACE,sBAAKW,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAInB,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,uBAGJ,gCACGoB,KAAKhB,MAAMC,MAAMgB,KAAI,SAACC,GAAD,OACpB,wBAAC,EAAD,2BAAaA,GAAb,IAAmBC,IAAKD,EAAKrB,kBAMvC,qBAAKkB,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,uBAAMK,SAAUJ,KAAKN,aAArB,UACE,sBAAKK,UAAU,OAAf,UACE,uBAAOM,QAAQ,OAAON,UAAU,aAAhC,4CAGA,uBACEO,KAAK,OACLP,UAAU,eACVlB,GAAG,OACHW,MAAOQ,KAAKhB,MAAMI,QAClBN,KAAK,UACLyB,SAAUP,KAAKX,uBAGnB,wBAAQiB,KAAK,SAASP,UAAU,kBAAhC,kC,GAnFMS,aCQLC,MATf,WACE,OACE,sBAAKV,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCMSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb48b25b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ItemRow = (props) => {\n\n  return (\n    <tr>\n      <th scope=\"row\">{props.id}</th>\n      <td>{props.name}</td>\n    </tr>\n  );\n};\n\nexport default ItemRow;\n","import React, { Component } from \"react\";\nimport ItemRow from \"../ItemRow/ItemRow\";\n\nclass Items extends Component {\n  state = {\n    items: [\n      {\n        id: 1,\n        name: \"Garlic Salt\",\n        calorieCount: 0,\n      },\n      {\n        id: 2,\n        name: \"Macaroni\",\n        caloreCount: 100,\n      },\n      {\n        id: 3,\n        name: \"Canned Pinto Beans\",\n        calorieCount: 25,\n      },\n    ],\n    newItem: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newItem = {\n      id: this.state.items.length + 1,\n      name: this.state.newItem,\n    };\n\n    const itemsArray = [...this.state.items];\n    itemsArray.push(newItem);\n\n    this.setState({\n      items: itemsArray,\n      newItem: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.items.map((item) => (\n                  <ItemRow {...item} key={item.id} />\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"item\" className=\"form-label\">\n                  Add a new item to your pantry.\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"item\"\n                  value={this.state.newItem}\n                  name=\"newItem\"\n                  onChange={this.handleInputChange}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Items;\n","import Items from \"./components/Items/Items\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello world</h1>\n      <Items/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}